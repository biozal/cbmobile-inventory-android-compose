{
  "interface":":4984",
   "log": ["*"],
  "logging": {
    "log_file_path": "/var/tmp/sglogs",
    "console": {
      "log_level": "debug",
      "log_keys": ["*"]
    },
    "error": {
      "enabled": true,
      "rotation": {
        "max_size": 20,
        "max_age": 180
      }
    },
    "warn": {
      "enabled": true,
      "rotation": {
        "max_size": 20,
        "max_age": 90
      }
    },
    "info": {
      "enabled": false
    },
    "debug": {
      "enabled": false
    }
  },
  "databases": {
    "projects": {
      "import_docs": true,
      "bucket":"projects",
      "server": "http://cb-server:8091",
      "enable_shared_bucket_access":true,
      "delta_sync": {
        "enabled":false
      },
       "num_index_replicas":0,
      "username": "admin",
      "password": "password",
     "users": { 
       "demo@example.com":  { "password": "password", "admin_roles": ["team1"] },
       "demo1@example.com": { "password": "password", "admin_roles": ["team1"] },
       "demo2@example.com": { "password": "password", "admin_roles": ["team2"] },
       "demo3@example.com": { "password": "password", "admin_roles": ["team2"] },
       "demo4@example.com": { "password": "password", "admin_roles": ["team3"] },
       "demo5@example.com": { "password": "password", "admin_roles": ["team3"] }
      },
      "roles": {
        "team1": {
          "admin_channels": [
            "channel.team1"
          ]
        },
        "team2": {
          "admin_channels": [
            "channel.team2"
          ]
        },
        "team3": {
          "admin_channels": [
            "channel.team3"
          ]
        }
      },
    "import_filter":  `
    function(doc){
      console.log("********Processing import filter - documents from couchbase server");
        if (doc.type == 'project' || doc.type == 'location'){
          return true;
        }
        return false;
    }
     `,
    "sync":  `
      function sync(doc, oldDoc) {
    
      /* Data Validation */
      validateNotEmpty("type", doc.type);

      if (doc.type == 'location'){
        console.log("********Processing Location Docs - setting it to global/public");
        channel('!');
      } else {
        console.log("********Processing Team Docs");
        validateNotEmpty("team", doc.team);
        if (!isDelete()) {
 
          /* Routing  -- add channel routing rules here for document */
          var team = getTeam();
          var channelId = "channel." + team;
          console.log("********Setting Channel to " + channelId);
          channel(channelId);
              
          /* Authorization  - Access Control */
         requireRole(team);
         access("role:team1", "channel.team1")
         access("role:team2", "channel.team2")
         access("role:team3", "channel.team3")
         }
      }
  // get type property
  function getType() {
    return (isDelete() ? oldDoc.type : doc.type);
  }

  // get email Id property
  function getTeam() {
    return (isDelete() ? oldDoc.team : doc.team);
  }

  // Check if document is being created/added for first time
  function isCreate() {
    // Checking false for the Admin UI to work
    return ((oldDoc == false) || (oldDoc == null || oldDoc._deleted) && !isDelete());
  }

  // Check if this is a document delete
  function isDelete() {
    return (doc._deleted == true);
  }

  // Verify that specified property exists
  function validateNotEmpty(key, value) {
    if (!value) {
      throw({forbidden: key + " is not provided."});
    }
  }
}
      `
    }
  }
}
